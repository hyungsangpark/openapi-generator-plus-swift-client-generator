{{#if securityRequirements}}
var didAuthenticate = false
var lastError: Error?

{{#each securityRequirements.requirements}}
if !didAuthenticate {
    var authedRequest = localVarRequest
    do {
        {{#each schemes}}
        if let securityClient = self.configuration.securityClient {
            authedRequest = try await securityClient.authorize(securityScheme: .{{{scheme.name}}}, scopes: [{{#each scopes}}{{{stringLiteral name}}}{{#unless @last}}, {{/unless}}{{/each}}], request: authedRequest)
        }
        {{/each}}
        didAuthenticate = true
        localVarRequest = authedRequest
    } catch (let error) {
        lastError = error
    }
}
{{/each}}
{{#unless securityRequirements.optional}}
if (!didAuthenticate) {
    throw lastError ?? APIError.authenticationPrevented
}
{{/unless}}
{{/if}}
