{{>frag/schemaDocumentation}}
{{#join '_parents' ', '}}
Swift.Codable
Swift.Hashable
Swift.Sendable
{{#each implements}}
{{{nativeType.parentType}}}
{{/each}}
{{/join}}
public struct {{{name}}}: {{{_parents}}} {
{{#with property}}
    {{>frag/propertyDocumentation}}
    public var {{{name}}}: {{{nativeType}}}
{{/with}}

{{#join '_params' ', '}}
{{#with property}}
{{{name}}}: {{{nativeType}}}{{#unless required}} = {{#if initialValue}}{{{initialValue}}}{{else}}nil{{/if}}{{/unless}}
{{/with}}
{{/join}}
    public init({{{_params}}}) {
{{#with property}}
        self.{{{name}}} = {{{name}}}
{{/with}}
    }

    // Encodable protocol methods

    public init(from decoder: Swift.Decoder) throws {
        let container = try decoder.singleValueContainer()
{{#with property}}
        {{>frag/decode keyed=false}}
{{/with}}
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.singleValueContainer()
{{#with property}}
        {{>frag/encode keyed=false}}
{{/with}}
    }

    {{>frag/nestedSchemas}}
}
